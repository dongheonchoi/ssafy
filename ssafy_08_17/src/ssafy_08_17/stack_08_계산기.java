package ssafy_08_17;

public class stack_08_계산기 {

	public static void main(String[] args) {
		//직접 작성하지 않는다.(swea 문제 : 계산기1 : + / 계산기2 : +* / 계산기 +*())
		//스택을 배열을 이용해서 만들던지/ Stack<Character> / Stack<Integer>
		
		//조건문을 통해서 우선순위를 확인할 수도 있고
		//map을 이용하여 우선순위를 확인할 수도 있겟다.
		
		
	}
	
// 중위 -> 후위표기
// 문자열로 중위표기식이 들어올 것이다. stack :연산자를 담아야 해
//1.글자를 하나씩 읽는다.
//2.피연산자라면 출력한다.
//3.연산자라면 ....
//3-1 스택이 공백상태라면 그냥 넣는다. push
//3-2 스택이 공백상태가 아니라면, top을 확인하고 내가 찍어 누를 수 있으면 그냥 push / 못누르면 pop
//3-3 연산자 우선순위는 /*, +-, ( <--조금 특별하다.
//3-4 닫는 괄호라면 여는 소괄호를 만날 때까지 pop하여 출력하고, 여는 소괄화는 그냥 pop
//4. 토크을 다 못 읽었으면 다시 1번부터 시작
//5.다 읽고 끝낫는데 스택이 공백이 아니라면 공백이 될때까지 pop하면서 출력
	
// 후위표기->계산
//문자여열로 만들어진 후위표기식이 있을 것이다. Stack : 피연산자를 담는다.
//1.글자를 읽는다.
//2.피연산자라면 스택에 넣는다.
//3.연산자라면 필요한 피연산자의 개수만큼 꺼내어 계산하고 다시 넣는다. (순서 매우 중요)
//4.읽은 토큰이 남았다면 다시 1번부터 시작
//5.다읽고 처리했다면 pop하여 결과 출력

	
	
}
